name: Security Alerts

on:
    # スケジュール実行（毎日午前2時 UTC）
    schedule:
        - cron: "0 2 * * *"
    # 手動実行も可能
    workflow_dispatch:
    # プッシュ時に実行
    push:
        branches: [main, develop]
    # プルリクエスト時に実行
    pull_request:
        branches: [main, develop]

permissions:
    contents: write
    security-events: write
    pull-requests: write

jobs:
    security-scan:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up JDK 21
              uses: actions/setup-java@v4
              with:
                  java-version: "21"
                  distribution: "temurin"
                  cache: maven

            - name: Configure Maven settings for GitHub Packages
              run: |
                  mkdir -p $HOME/.m2
                  cat <<EOF > $HOME/.m2/settings.xml
                  <settings>
                    <servers>
                      <server>
                        <id>github</id>
                        <username>${{ github.actor }}</username>
                        <password>${{ secrets.GITHUB_TOKEN }}</password>
                      </server>
                    </servers>
                  </settings>
                  EOF
            # NVDデータのキャッシュを復元
            - name: Cache NVD data
              uses: actions/cache@v4
              with:
                  path: ~/.m2/repository/org/owasp/dependency-check-data
                  key: nvd-data-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
                  restore-keys: |
                      nvd-data-${{ runner.os }}-

            - name: Run security scan with Maven
              env:
                  NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
              continue-on-error: true
              id: security-scan
              run: |
                  echo "セキュリティスキャンを実行中..."
                  # タイムアウトとリトライの設定を追加
                  mvn org.owasp:dependency-check-maven:check \
                    -Dnvd.api.key=${NVD_API_KEY} \
                    -Dnvd.api.delay=4000 \
                    -DconnectionTimeout=300000 \
                    -DdataDirectory=$HOME/.m2/repository/org/owasp/dependency-check-data \
                    -DfailOnError=false \
                    -DskipSystemScope=true \
                    -DretireJsAnalyzerEnabled=false \
                    || echo "セキュリティスキャンでエラーが発生しましたが、処理を続行します"
                  echo "セキュリティスキャンが完了しました"

            - name: Upload security report
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: security-report
                  path: target/dependency-check-report.html
                  retention-days: 30
                  if-no-files-found: warn

            - name: Check for security vulnerabilities
              if: always()
              run: |
                  echo "セキュリティスキャンの結果を確認中..."

                  # セキュリティレポートの存在確認
                  if [ -f "target/dependency-check-report.html" ]; then
                      echo "セキュリティレポートが生成されました"

                      # 脆弱性の数をカウント（簡易的な方法）
                      VULNERABILITIES=$(grep -c "vulnerability" target/dependency-check-report.html || echo "0")
                      echo "検出された脆弱性数: $VULNERABILITIES"

                      if [ "$VULNERABILITIES" -gt 0 ]; then
                          echo "⚠️ セキュリティ脆弱性が検出されました"
                          echo "詳細はアーティファクトのセキュリティレポートを確認してください"
                      else
                          echo "✅ セキュリティ脆弱性は検出されませんでした"
                      fi
                  else
                      echo "⚠️ セキュリティレポートが生成されませんでした"
                      echo "NVDデータの更新に失敗した可能性があります"
                      echo "次回の実行時にキャッシュが使用されることで改善される可能性があります"
                  fi
